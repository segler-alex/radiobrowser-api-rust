## API
## ===
## Directory for static and template files
static-files-dir = "/usr/share/radiobrowser"
## Log file path
log-dir = "/var/log/radiobrowser/"
## Log level 0(WARN)-3(TRACE)
#log-level = 1
## Log in JSON format
# log-json = false
## Listening IP
listen-host = "127.0.0.1"
## Listening port
listen-port = 8080
## How many concurrent threads used by socket
threads = 5
## Update caches at an interval
update-caches-interval = "5mins"
## The same ip cannot do clicks for the same stream in this timespan
click-valid-timeout = "1day"
## Broken streams are removed after this timespan, if they have never worked.
broken-stations-never-working-timeout = "3days"
## Broken streams are removed after this timespan.
broken-stations-timeout = "30days"
## Checks are removed after this timespan.
checks-timeout = "30days"
## Checks are removed after this timespan.
clicks-timeout = "30days"
## Documentation url to be used if automatic way is not working (HTTP/1.0)
server-url = "https://de1.api.radio-browser.info"

## Cache support
## =============
## cache type can be "none" or "builtin" or "redis" or "memcached"
# cache-type = "none"
## redis connection string
# cache-url = "redis://localhost:6379"
## memcached connection string
# cache-url = "memcache://localhost:11211"
## Time to live for cache items
# cache-ttl = "60secs"

## Database
## ========
## database connection string (mysql, mariadb)
database = "mysql://radiouser:password@localhost/radio"
## Ignore errors on database migration scripts
## ONLY use this if you know what you are doing
ignore-migration-errors = false
## Allow database to downgrade if you start an older version
## of the radio browser binary
allow-database-downgrade = false

## Prometheus exporter
## ===================
## This will enable the prometheus compatible exporter on the main listening port
## You can reach it by doing a "GET /metrics"
prometheus-exporter = true
## Prefix for all exported keys
prometheus-exporter-prefix = "radio_browser"

## Stream check
## ============
## Enable the checking of stations
enable-check = false
## Concurrent checks
concurrency = 10
## Batchsize of stations to get from the database at a time
stations = 100
## Enable delete logic for stations
delete = true
## Automatic favicon check for stations (experimental)
favicon = false
## Interval in seconds to wait after every batch of checks
pause = "60secs"
## Timeout for tcp connections
tcp-timeout = "10secs"
## Recursive depth for real stream link resolution
max-depth = 5
## Retries for each station check until marked as broken
retries = 5
## Hostname for the check-entries in the database, defaults to the local hostname
#source = "myhostname"
# Freeform location string for this server
# server-location = "Datacenter 2 in coolstreet"
# 2 letter countrycode to locate this server
# server-country-code = "DE"
## User agent for the stream check
#useragent = "useragent/1.0"

# Check server infos if server supports it (icecast)
server-info-check = false
# Chunksize for checking servers
server-info-check-chunksize = 100

## Cleanup
## =======
## File path to CSV for replacing languages (local path or http/https)
#replace-language-file = "https://radiobrowser.gitlab.io/radiobrowser-static-data/language-replace.csv"
replace-language-file = "/etc/radiobrowser/language-replace.csv"
## File path to CSV for mapping language to code (local path or http/https)
language-to-code-file = "/etc/radiobrowser/language-to-code.csv"

## Mirroring
## =========
## Mirror pull interval in seconds
mirror-pull-interval = "5mins"
## How many changes should be pulled in a chunk while pulling
chunk-size-changes = 10000
## How many checks should be pulled in a chunk while pulling
chunk-size-checks = 10000
## On values > 0 autodelete stations with same urls, order by clickcount DESC
# max-duplicates = 0
## Mirror from server
[pullservers]
#[pullservers.alpha]
#host = "http://nl1.api.radio-browser.info"
#[pullservers.beta]
#host = "http://de1.api.radio-browser.info"
#[pullservers.gamma]
#host = "http://fr1.api.radio-browser.info"
